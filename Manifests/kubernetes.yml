apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-coder
  namespace: user-workloads
  labels:
    app: coder
spec:
  replicas: 3
  selector:
    matchLabels:
      app: coder
  template:
    metadata:
      labels:
        app: coder
    spec:
      containers:
        - name: container-coder
          image: <azure_container_registry_wildcard>.azurecr.io/coder:<container_image_tag_wildcard>
          env:
            - name: HOSTINGSTRATEGY
              value: "Containerized"
            - name: HOSTINGSERVICE
              value: "Azure Kubernetes Service"
          livenessProbe:
            httpGet:
              path: /status/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /status/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /status/startup
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          volumeMounts:
            - name: azure-fileshare-volume
              mountPath: /data
              readOnly: false
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
      nodeSelector:
        workloads: user-workloads
      volumes:
        - name: azure-fileshare-volume
          persistentVolumeClaim:
            claimName: pvc-azure-fileshare

---

apiVersion: v1
kind: Service
metadata:
  name: service-coder
  namespace: user-workloads
  labels:
    app: coder
spec:
  type: ClusterIP
  selector:
    app: coder
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-coder
  namespace: user-workloads
  annotations:
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: certificate-agic
    appgw.ingress.kubernetes.io/redirect-to-https: "true"
spec:
  ingressClassName: azure/application-gateway
  rules:
  - host: arneskubernetesdemo.northeurope.cloudapp.azure.com
    http:
      paths:
      - path: /coder/*
        pathType: Prefix
        backend:
          service:
            name: service-coder
            port:
              number: 8080
